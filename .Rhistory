library(swirl)
library(XML)
x <- [1,10]
x <- [1]
x <- (1,10)
x <- [1:10]
x <- (1:10)
x
install.packages("slidify")
library(devtools)
library(slidify)
setwd("~/GitHub/developing-data-products/untitled folder")
setwd("~/GitHub/developing-data-products/wk2")
author("first deck")
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
install_version("stringr", version="0.6.2", type = "source")
publish_github('raconger', 'developing-data-products')
publish_github(user = "raconger", repo = "developing-data-products")
setwd("~/GitHub/devdataprod")
author("test presentation")
install_github('slidifyLibraries', 'ramnathv')
author("Impress demo")
[1:10]
(1:10)
setwd("~/GitHub/housing-sales")
library(shiny)
install('shiny')
install.packages("shiny")
library(shiny)
runExample("01_hello")
runExample("02_text")
runExample("03_reactivity")
runApp()
runApp()
runApp()
runApp()
date <- 2001-01-01
date
date + 45
date <- "2001-01-01"
date
date + 45
odate
runApp()
ls()
dir()
data <- read.csv("sales_data.csv")
header(data)
data(header)
data
names(data)
data$Date Sold
data@Date Sold
data@'Date Sold'
data@"Date Sold"
data@Escrow
data$Escrow
data$"Escrow"
data$"Date Sold"
data$"Buyer"
data$"Parcel Number"
data$'Parcel Number'
data$'Parcel*'
data$'Parcel'
data$'Date'
data$'Vest'
data$'Vest Doc'
data$'Vest Doc Year'
data$'Date'
?as.Date
testDate <- as.Date("20030522")
testDate <- as.Date("20030522", "%y%m%d")
testDate
testDate <- as.Date("20030522", "%d%m%y")
testDate
testDate <- as.Date("20030522", "%Y%m%d"); testDate
testDate <- as.Date("20030523", "%Y%m%d"); testDate
testDate <- as.Date("20050523", "%Y%m%d"); testDate
testDates <- as.Date(data$'Date', "%Y%m%d")
data$'Date'(2)
data$'Date'[2]
testDates <- as.Date(data$'Date'[2], "%Y%m%d")
is.numeric(data$'Date'[2])
testDates <- as.Date(as.character(data$'Date'[2]), "%Y%m%d")
testDates
testDates <- as.Date(as.character(data$'Date'), "%Y%m%d")
testDates
plotData <- as.Date(as.character(data$'Date'), "%Y%m%d")
plotData(2,) <- as.Date(as.character(data$'Date'), "%Y%m%d")
plotData[2,] <- as.Date(as.character(data$'Date'), "%Y%m%d")
testVector <- (plotData, plotData)
testVector <- [plotData, plotData]
testVector(1) <- plotData
testVector[1] <- plotData
names(Data)
names(data
names(data)
data@"Adjusted"
data@'Adjusted.Sale.Price'
data@"Adjusted.Sale.Price"
data$"Adjusted.Sale.Price"
names(data)
data$'Adjusted.Sale.Price'
names(data)
data$Buildings.Sq..Ft.
plot(data$Buildings.Sq..Ft., data$'Adjusted.Sale.Price')
plot(3,4)
playApp()
runApp()
data$'Date' <- <- as.Date(as.character(data$'Date'), "%Y%m%d")
data$'Date' <- as.Date(as.character(data$'Date'), "%Y%m%d")
with(data[(data$'Date' > 2014-01-01)]) plot(data$Buildings.Sq..Ft., data$'Adjusted.Sale.Price')
with(data[(data$'Date' > 2014-01-01),], plot(data$Buildings.Sq..Ft., data$'Adjusted.Sale.Price'))
runApp()
runApp()
dfr <- data.frame(data$'Date', data$Buildings.Sq..Ft., data$'Adjusted.Sale.Price')
dfr
summary(dfr)
library(data.table)
setDT(dfr)[, .SD[!all(.SD[, -1, with = F] == 0)], by = data.Date]
summary(dfr)
setDT(dfr)[, .SD[!any(.SD[, -1, with = F] == 0)], by = data.Date]
summary(dfr)
dfr[which(dfr==0)] = NA_character_
summary(dfr)
dfr[is.na(dfr)] <- 0
dfr[dfr][is.na(dfr)] <- 0
id = c(rep(1:19),NA)
id
id(4)
id = c(4)
id
id = c(rep(1:19),NA)
dfr[c("data.Buildings.Sq..Ft.")]
?c
vars.to.replace <- c("dfr$data.Buildings.Sq..Ft.", "dfr$data.Adjusted.Sale.Price")
data.Buildings.Sq..Ft.
df2 <- dfr[vars.to.replace]
summary(vars.to.replace)
vars.to.replace
vars.to.replace <- c("data.Buildings.Sq..Ft.", "data.Adjusted.Sale.Price")
df2 <- dfr[vars.to.replace]
dfr["data.Buildings.Sq..Ft."]
dfr[which(dfr == 0)]
results <- dfr[which(dfr == 0)]
results
summary(results)
dfr
dfr$data.Buildings.Sq..Ft.
results <- which(dfr$data.Building.Sq..Ft.==0)
results
results <- dfr[which(dfr$data.Building.Sq..Ft.==0)]
results
dfr$data.Buildings.Sq..Ft.(3)
dfr$data.Buildings.Sq..Ft.[3]
is.numeric(dfr$data.Buildings.Sq..Ft.[3])
dfr$data.Buildings.Sq..Ft.[3]==0
summary(dfr)
dfr[dfr == 0] <- NA
summary(dfr)
plot("dfr$data.Buildings.Sq..Ft.", "dfr$data.Adjusted.Sale.Price")
newdfr <- na.omit(dfr)
summary(newdfr)
plot("newdfr$data.Buildings.Sq..Ft.", "newdfr$data.Adjusted.Sale.Price")
plot("newdfr$data.Buildings.Sq..Ft.", "newdfr$data.Adjusted.Sale.Price")
runApp()
plot("newdfr$data.Buildings.Sq..Ft.", "newdfr$data.Adjusted.Sale.Price", xlim=range(100:5000))
plot("newdfr$data.Buildings.Sq..Ft.", "newdfr$data.Adjusted.Sale.Price", xlim=range(100:5000), ylim=range(0:1000000))
plot("newdfr$data.Buildings.Sq..Ft.", "newdfr$data.Adjusted.Sale.Price", xlim=range(100:5000), ylim=range(0:100000))
summary(newdfr)
newdfr$data.Buildings.Sq..Ft.
head(newdfr)
with(newdfr,plot(data.Buildings.Sq..Ft, data.Adjusted.Sale.Price))
with(newdfr,plot(data.Buildings.Sq..Ft., data.Adjusted.Sale.Price))
runApp()
plot(newdfr)
runApp()
library(devtools)
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='raconger', token='0E7D732CB10074EBC61DD34E584DEA7C', secret='y3TH/G5mZRg5K1FUI76k0pYO3yLwi/V+yxx1a5AM')
library(shinyapps)
shinyapps::deployApp()
url <- "https://github.com/raconger/housing-sales/blob/master/sales_data.csv?raw=true"
library(RCurl)
x <- getURL("https://github.com/raconger/housing-sales/blob/master/sales_data.csv?raw=true")
x <- getURL("https://github.com/raconger/housing-sales/blob/master/sales_data.csv")
y <- read.csv(text=getURL("https://github.com/raconger/housing-sales/blob/master/sales_data.csv"))
download.file("https://github.com/raconger/housing-sales/blob/master/sales_data.csv?raw=true", destfile = "/tmp/test.csv", method = "curl")
runApp()
runApp()
runApp()
shinyapps::deployApp()
